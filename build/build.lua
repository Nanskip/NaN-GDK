-- build.lua autogenerated
_debug = true

models = {}

textures = {}

data = {}

sounds = {}

-- modules

-- Debug module

debug = {}function debug.log(text)
    if _debug then
        print("Log: " .. text)
    end
end

debug._LOGS = {}

function debug.getLogs()
    local logs = ""

    for _, log in ipairs(debug._LOGS) do
        logs = logs .. log .. "\n"
    end

    Dev:CopyToClipboard(logs)
end

loading_screen = {}loading_screen.ui = require("uikit")

loading_screen.start = function(self)
    debug.log("Loading screen initialized.")
    local ui = self.ui

    self.background = ui:frame({color = Color(0, 0, 0, 0)})
    self.background.Width = Screen.Width
    self.background.Height = Screen.Height
end

loading_screen.finish = function(self)
    debug.log("Loading screen removed.")
    self.background:remove()
    self.background = nil
end

loading_screen:start()

worldgen = {}worldgen.test = function()
    print("hey!")
end

local to_load, loaded = 0, 0

function _log(msg) debug.log(msg) end
function _check_ready() if loaded >= to_load then _log('All assets loaded') _start_game() end end

to_load += 1
_log("Downloading models/soda_can")
HTTP:Get("https://raw.githubusercontent.com/Nanskip/NaN-GDK/refs/heads/main/source/models/soda_can.glb", function(res)
    if res.StatusCode == 200 then
        Assets:Load(res.Body, function(assets)
            if assets == nil then
                _log("Failed to load model soda_can")
                loaded += 1
                _check_ready()
                return
            end
            for _, asset in ipairs(assets) do
                asset:SetParent(World)
                if models.soda_can == nil then
                    models.soda_can = {asset}
                else
                    models.soda_can[#models.soda_can+1] = asset
                end
                _log("Downloaded and loaded model soda_can")
            end
            loaded += 1
            _check_ready()
        end, AssetType.AnyObject)
    else
        _log("Failed to download models/soda_can: " .. res.StatusCode)
        loaded += 1
        _check_ready()
    end
end)

to_load += 1
_log("Downloading models/tesla_turret")
HTTP:Get("https://raw.githubusercontent.com/Nanskip/NaN-GDK/refs/heads/main/source/models/tesla_turret.glb", function(res)
    if res.StatusCode == 200 then
        Assets:Load(res.Body, function(assets)
            if assets == nil then
                _log("Failed to load model tesla_turret")
                loaded += 1
                _check_ready()
                return
            end
            for _, asset in ipairs(assets) do
                asset:SetParent(World)
                if models.tesla_turret == nil then
                    models.tesla_turret = {asset}
                else
                    models.tesla_turret[#models.tesla_turret+1] = asset
                end
                _log("Downloaded and loaded model tesla_turret")
            end
            loaded += 1
            _check_ready()
        end, AssetType.AnyObject)
    else
        _log("Failed to download models/tesla_turret: " .. res.StatusCode)
        loaded += 1
        _check_ready()
    end
end)

to_load += 1
_log("Downloading textures/can")
HTTP:Get("https://raw.githubusercontent.com/Nanskip/NaN-GDK/refs/heads/main/source/textures/can.png", function(res)
    if res.StatusCode == 200 then
        textures.can = res.Body
        _log("Downloaded textures/can")
    else
        _log("Failed to download textures/can: " .. res.StatusCode)
    end
    loaded += 1
    _check_ready()
end)

to_load += 1
_log("Downloading data/test")
HTTP:Get("https://raw.githubusercontent.com/Nanskip/NaN-GDK/refs/heads/main/source/data/test.json", function(res)
    if res.StatusCode == 200 then
        data.test = res.Body
        _log("Downloaded data/test")
    else
        _log("Failed to download data/test: " .. res.StatusCode)
    end
    loaded += 1
    _check_ready()
end)

-- start

function _start_game()
    worldgen.test()
    
    loading_screen:finish()
end
